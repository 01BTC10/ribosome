#
# Copyright (c) 2014 Martin Sustrik  All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#

#
# This generator creates C++ objects from the definitions in the XML file.
# The command line below also demonstrates how to create a stand-alone
# compiler independent of ribosome itself:
#
# Create the compiler:  ribosome --rna mycompiler.dna > mycompiler
#                       chmod +x mycompiler
#
# Use the compiler:     ./mycompiler complex.xml
#
# Output:               complex.cpp
#

require "rexml/document"

root = REXML::Document.new(File.new(ARGV[0])).root

./!output ARGV[0][0..-5] + ".cpp"

.class @{root.attributes["name"]} {
root.elements.each("method") do |m|
.
.   @{m.attributes["return"]} @{m.attributes["name"]}(
.   /!separate(", ")
    m.elements.each("arg") do |a|
.       /+@{a.attributes["type"]} @{a.attributes["name"]}
    end
.   /+) {
.       @{m.texts.join}
.   }
end
.};

